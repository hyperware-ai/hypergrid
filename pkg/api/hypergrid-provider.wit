interface hypergrid-provider {
use standard.{address};

    record dummy-argument {
        argument: string
    }

    record endpoint-definition {
        name: string,
        method: http-method,
        request-structure: request-structure-type,
        base-url-template: string,
        path-param-keys: option<list<string>>,
        query-param-keys: option<list<string>>,
        header-keys: option<list<string>>,
        body-param-keys: option<list<string>>,
        api-key: option<string>,
        api-key-query-param-name: option<string>,
        api-key-header-name: option<string>
    }

    record provider-request {
        provider-name: string,
        arguments: list<tuple<string, string>>,
        payment-tx-hash: option<string>
    }

    record registered-provider {
        provider-name: string,
        provider-id: string,
        description: string,
        instructions: string,
        registered-provider-wallet: string,
        price: f64,
        endpoint: endpoint-definition
    }

    record test-provider-args {
        provider-name: string,
        args: list<tuple<string, string>>
    }

    variant http-method {
        get,
        post
    }

    variant request-structure-type {
        get-with-path,
        get-with-query,
        post-with-json
    }

    variant terminal-command {
        list-providers,
        register-provider(registered-provider),
        unregister-provider(string),
        test-provider(test-provider-args),
        export-providers
    }

    // Function signature for: call-provider (remote)
    record call-provider-signature-remote {
        target: address,
        request: provider-request,
        returning: result<string, string>
    }

    // Function signature for: export-providers (http)
    // HTTP: POST /api/export-providers
    record export-providers-signature-http {
        target: string,
        returning: result<string, string>
    }

    // Function signature for: get-provider-namehash (http)
    // HTTP: POST /api/get-provider-namehash
    record get-provider-namehash-signature-http {
        target: string,
        provider-name: string,
        returning: result<string, string>
    }

    // Function signature for: get-registered-providers (http)
    // HTTP: POST /api/get-registered-providers
    record get-registered-providers-signature-http {
        target: string,
        returning: result<list<registered-provider>, string>
    }

    // Function signature for: health-ping (local)
    record health-ping-signature-local {
        target: address,
        arg: dummy-argument,
        returning: result<string, string>
    }

    // Function signature for: health-ping (remote)
    record health-ping-signature-remote {
        target: address,
        arg: dummy-argument,
        returning: result<string, string>
    }

    // Function signature for: register-provider (http)
    // HTTP: POST /api/register-provider
    record register-provider-signature-http {
        target: string,
        provider: registered-provider,
        returning: result<registered-provider, string>
    }

    // Function signature for: terminal-command (local)
    record terminal-command-signature-local {
        target: address,
        command: terminal-command,
        returning: result<string, string>
    }

    // Function signature for: update-provider (http)
    // HTTP: POST /api/update-provider
    record update-provider-signature-http {
        target: string,
        provider-name: string,
        updated-provider: registered-provider,
        returning: result<registered-provider, string>
    }

    // Function signature for: validate-provider (http)
    // HTTP: POST /api/validate-provider
    record validate-provider-signature-http {
        target: string,
        provider: registered-provider,
        arguments: list<tuple<string, string>>,
        returning: result<string, string>
    }
}
